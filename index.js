const SCALE = 5;
const computeY = x => Math.sqrt(x / SCALE);
const HUMAN_READABLE = "y = sqrt(x)";

setMap(map`
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
`);

const point = "z";
setLegend([point, bitmap`
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
`]);

const widthLimit = width() - 1;
const heightLimit = height() - 1;

const drawGraph = () => {
  for (let x = 0; x < widthLimit; x++) {
    const y = computeY(x);

    try {
      addSprite(x, heightLimit - Math.floor(y * SCALE), point);
    } catch (error) {
      // Error handling
    }
  }
};

const drawTicks = () => {
  // X-axis ticks
  for (let x = 0; x < widthLimit; x += SCALE) {
    try {
      const label = x.toString();
      const yOffset = label.length > 1 ? [...label].map((_, i) => i) : [0];
      yOffset.forEach(offset => 
        addText(label[offset], { x: x + 2, y: offset, color: color`5` })
      );
    } catch (error) {
      // Error handling
    }
  }
  
  // Y-axis ticks
  for (let y = 0; y < heightLimit; y += SCALE) {
    try {
      addText(Math.floor(heightLimit - y).toString(), { x: 2, y: y + 2, color: color`3` });
      addSprite(-1, y, point);
    } catch (error) {
      // Error handling
    }
  }
};

drawGraph();
drawTicks();

addText(HUMAN_READABLE, {
  x: 5,
  y: 15
});
